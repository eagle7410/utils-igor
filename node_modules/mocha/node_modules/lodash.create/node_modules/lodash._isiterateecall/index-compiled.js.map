{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;;;;;;;;AASA;AACA,IAAI,WAAW,OAAf;;AAEA;;;;AAIA,IAAI,mBAAmB,gBAAvB;;AAEA;;;;;;;AAOA,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzB,SAAO,UAAS,MAAT,EAAiB;AACtB,WAAO,UAAU,IAAV,GAAiB,SAAjB,GAA6B,OAAO,GAAP,CAApC;AACD,GAFD;AAGD;;AAED;;;;;;;;;;AAUA,IAAI,YAAY,aAAa,QAAb,CAAhB;;AAEA;;;;;;;AAOA,SAAS,WAAT,CAAqB,KAArB,EAA4B;AAC1B,SAAO,SAAS,IAAT,IAAiB,SAAS,UAAU,KAAV,CAAT,CAAxB;AACD;;AAED;;;;;;;;AAQA,SAAS,OAAT,CAAiB,KAAjB,EAAwB,MAAxB,EAAgC;AAC9B,UAAS,OAAO,KAAP,IAAgB,QAAhB,IAA4B,SAAS,IAAT,CAAc,KAAd,CAA7B,GAAqD,CAAC,KAAtD,GAA8D,CAAC,CAAvE;AACA,WAAS,UAAU,IAAV,GAAiB,gBAAjB,GAAoC,MAA7C;AACA,SAAO,QAAQ,CAAC,CAAT,IAAc,QAAQ,CAAR,IAAa,CAA3B,IAAgC,QAAQ,MAA/C;AACD;;AAED;;;;;;;;;AASA,SAAS,cAAT,CAAwB,KAAxB,EAA+B,KAA/B,EAAsC,MAAtC,EAA8C;AAC5C,MAAI,CAAC,SAAS,MAAT,CAAL,EAAuB;AACrB,WAAO,KAAP;AACD;AACD,MAAI,OAAO,OAAO,KAAlB;AACA,MAAI,QAAQ,QAAR,GACG,YAAY,MAAZ,KAAuB,QAAQ,KAAR,EAAe,OAAO,MAAtB,CAD1B,GAEG,QAAQ,QAAR,IAAoB,SAAS,MAFpC,EAE6C;AAC3C,QAAI,QAAQ,OAAO,KAAP,CAAZ;AACA,WAAO,UAAU,KAAV,GAAmB,UAAU,KAA7B,GAAuC,UAAU,KAAxD;AACD;AACD,SAAO,KAAP;AACD;;AAED;;;;;;;;;AASA,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB,SAAO,OAAO,KAAP,IAAgB,QAAhB,IAA4B,QAAQ,CAAC,CAArC,IAA0C,QAAQ,CAAR,IAAa,CAAvD,IAA4D,SAAS,gBAA5E;AACD;;AAED;;;;;;;;;;;;;;;;;;;;AAoBA,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB;AACA;AACA,MAAI,OAAO,OAAO,KAAlB;AACA,SAAO,CAAC,CAAC,KAAF,KAAY,QAAQ,QAAR,IAAoB,QAAQ,UAAxC,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,cAAjB","file":"index-compiled.js","sourcesContent":["/**\n * lodash 3.0.9 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isIterateeCall;\n"]}