{"version":3,"sources":["tdd.js"],"names":[],"mappings":"AAAA;;;;AAIA,IAAI,OAAO,QAAQ,SAAR,CAAX;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAO,OAAP,GAAiB,UAAS,KAAT,EAAgB;AAC/B,MAAI,SAAS,CAAC,KAAD,CAAb;;AAEA,QAAM,EAAN,CAAS,aAAT,EAAwB,UAAS,OAAT,EAAkB,IAAlB,EAAwB,KAAxB,EAA+B;AACrD,QAAI,SAAS,QAAQ,UAAR,EAAoB,MAApB,EAA4B,OAA5B,EAAqC,KAArC,CAAb;;AAEA,YAAQ,KAAR,GAAgB,OAAO,UAAvB;AACA,YAAQ,QAAR,GAAmB,OAAO,SAA1B;AACA,YAAQ,UAAR,GAAqB,OAAO,MAA5B;AACA,YAAQ,aAAR,GAAwB,OAAO,KAA/B;AACA,YAAQ,GAAR,GAAc,MAAM,OAAN,CAAc,KAAd,IAAuB,OAAO,YAAP,CAAoB,KAApB,CAArC;;AAEA;;;;AAIA,YAAQ,KAAR,GAAgB,UAAS,KAAT,EAAgB,EAAhB,EAAoB;AAClC,aAAO,OAAO,KAAP,CAAa,MAAb,CAAoB;AACzB,eAAO,KADkB;AAEzB,cAAM,IAFmB;AAGzB,YAAI;AAHqB,OAApB,CAAP;AAKD,KAND;;AAQA;;;AAGA,YAAQ,KAAR,CAAc,IAAd,GAAqB,UAAS,KAAT,EAAgB,EAAhB,EAAoB;AACvC,aAAO,OAAO,KAAP,CAAa,IAAb,CAAkB;AACvB,eAAO,KADgB;AAEvB,cAAM,IAFiB;AAGvB,YAAI;AAHmB,OAAlB,CAAP;AAKD,KAND;;AAQA;;;AAGA,YAAQ,KAAR,CAAc,IAAd,GAAqB,UAAS,KAAT,EAAgB,EAAhB,EAAoB;AACvC,aAAO,OAAO,KAAP,CAAa,IAAb,CAAkB;AACvB,eAAO,KADgB;AAEvB,cAAM,IAFiB;AAGvB,YAAI;AAHmB,OAAlB,CAAP;AAKD,KAND;;AAQA;;;;AAIA,YAAQ,IAAR,GAAe,UAAS,KAAT,EAAgB,EAAhB,EAAoB;AACjC,UAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,UAAI,MAAM,SAAN,EAAJ,EAAuB;AACrB,aAAK,IAAL;AACD;AACD,UAAI,OAAO,IAAI,IAAJ,CAAS,KAAT,EAAgB,EAAhB,CAAX;AACA,WAAK,IAAL,GAAY,IAAZ;AACA,YAAM,OAAN,CAAc,IAAd;AACA,aAAO,IAAP;AACD,KATD;;AAWA;;;;AAIA,YAAQ,IAAR,CAAa,IAAb,GAAoB,UAAS,KAAT,EAAgB,EAAhB,EAAoB;AACtC,aAAO,OAAO,IAAP,CAAY,IAAZ,CAAiB,KAAjB,EAAwB,QAAQ,IAAR,CAAa,KAAb,EAAoB,EAApB,CAAxB,CAAP;AACD,KAFD;;AAIA,YAAQ,IAAR,CAAa,IAAb,GAAoB,OAAO,IAAP,CAAY,IAAhC;AACA,YAAQ,IAAR,CAAa,OAAb,GAAuB,OAAO,IAAP,CAAY,OAAnC;AACD,GApED;AAqED,CAxED","file":"tdd-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Test = require('../test');\n\n/**\n * TDD-style interface:\n *\n *      suite('Array', function() {\n *        suite('#indexOf()', function() {\n *          suiteSetup(function() {\n *\n *          });\n *\n *          test('should return -1 when not present', function() {\n *\n *          });\n *\n *          test('should return the index when present', function() {\n *\n *          });\n *\n *          suiteTeardown(function() {\n *\n *          });\n *        });\n *      });\n *\n * @param {Suite} suite Root suite.\n */\nmodule.exports = function(suite) {\n  var suites = [suite];\n\n  suite.on('pre-require', function(context, file, mocha) {\n    var common = require('./common')(suites, context, mocha);\n\n    context.setup = common.beforeEach;\n    context.teardown = common.afterEach;\n    context.suiteSetup = common.before;\n    context.suiteTeardown = common.after;\n    context.run = mocha.options.delay && common.runWithSuite(suite);\n\n    /**\n     * Describe a \"suite\" with the given `title` and callback `fn` containing\n     * nested suites and/or tests.\n     */\n    context.suite = function(title, fn) {\n      return common.suite.create({\n        title: title,\n        file: file,\n        fn: fn\n      });\n    };\n\n    /**\n     * Pending suite.\n     */\n    context.suite.skip = function(title, fn) {\n      return common.suite.skip({\n        title: title,\n        file: file,\n        fn: fn\n      });\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n    context.suite.only = function(title, fn) {\n      return common.suite.only({\n        title: title,\n        file: file,\n        fn: fn\n      });\n    };\n\n    /**\n     * Describe a specification or test-case with the given `title` and\n     * callback `fn` acting as a thunk.\n     */\n    context.test = function(title, fn) {\n      var suite = suites[0];\n      if (suite.isPending()) {\n        fn = null;\n      }\n      var test = new Test(title, fn);\n      test.file = file;\n      suite.addTest(test);\n      return test;\n    };\n\n    /**\n     * Exclusive test-case.\n     */\n\n    context.test.only = function(title, fn) {\n      return common.test.only(mocha, context.test(title, fn));\n    };\n\n    context.test.skip = common.test.skip;\n    context.test.retries = common.test.retries;\n  });\n};\n"]}