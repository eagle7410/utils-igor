{"version":3,"sources":["common.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,QAAQ,QAAQ,UAAR,CAAZ;;AAEA;;;;;;;;AAQA,OAAO,OAAP,GAAiB,UAAS,MAAT,EAAiB,OAAjB,EAA0B,KAA1B,EAAiC;AAChD,SAAO;AACL;;;;;;;AAOA,kBAAc,SAAS,YAAT,CAAsB,KAAtB,EAA6B;AACzC,aAAO,SAAS,GAAT,GAAe;AACpB,cAAM,GAAN;AACD,OAFD;AAGD,KAZI;;AAcL;;;;;;AAMA,YAAQ,UAAS,IAAT,EAAe,EAAf,EAAmB;AACzB,aAAO,CAAP,EAAU,SAAV,CAAoB,IAApB,EAA0B,EAA1B;AACD,KAtBI;;AAwBL;;;;;;AAMA,WAAO,UAAS,IAAT,EAAe,EAAf,EAAmB;AACxB,aAAO,CAAP,EAAU,QAAV,CAAmB,IAAnB,EAAyB,EAAzB;AACD,KAhCI;;AAkCL;;;;;;AAMA,gBAAY,UAAS,IAAT,EAAe,EAAf,EAAmB;AAC7B,aAAO,CAAP,EAAU,UAAV,CAAqB,IAArB,EAA2B,EAA3B;AACD,KA1CI;;AA4CL;;;;;;AAMA,eAAW,UAAS,IAAT,EAAe,EAAf,EAAmB;AAC5B,aAAO,CAAP,EAAU,SAAV,CAAoB,IAApB,EAA0B,EAA1B;AACD,KApDI;;AAsDL,WAAO;AACL;;;;;;;AAOA,YAAM,SAAS,IAAT,CAAc,IAAd,EAAoB;AACxB,cAAM,OAAN,CAAc,OAAd,GAAwB,IAAxB;AACA,aAAK,MAAL,GAAc,IAAd;AACA,eAAO,KAAK,MAAL,CAAY,IAAZ,CAAP;AACD,OAZI;;AAcL;;;;;;;AAOA,YAAM,SAAS,IAAT,CAAc,IAAd,EAAoB;AACxB,aAAK,OAAL,GAAe,IAAf;AACA,eAAO,KAAK,MAAL,CAAY,IAAZ,CAAP;AACD,OAxBI;;AA0BL;;;;;;;;;;AAUA,cAAQ,SAAS,MAAT,CAAgB,IAAhB,EAAsB;AAC5B,YAAI,QAAQ,MAAM,MAAN,CAAa,OAAO,CAAP,CAAb,EAAwB,KAAK,KAA7B,CAAZ;AACA,cAAM,OAAN,GAAgB,QAAQ,KAAK,OAAb,CAAhB;AACA,cAAM,IAAN,GAAa,KAAK,IAAlB;AACA,eAAO,OAAP,CAAe,KAAf;AACA,YAAI,KAAK,MAAT,EAAiB;AACf,gBAAM,MAAN,CAAa,WAAb,GAA2B,MAAM,MAAN,CAAa,WAAb,CAAyB,MAAzB,CAAgC,KAAhC,CAA3B;AACA,gBAAM,OAAN,CAAc,OAAd,GAAwB,IAAxB;AACD;AACD,YAAI,OAAO,KAAK,EAAZ,KAAmB,UAAvB,EAAmC;AACjC,eAAK,EAAL,CAAQ,IAAR,CAAa,KAAb;AACA,iBAAO,KAAP;AACD,SAHD,MAGO,IAAI,OAAO,KAAK,EAAZ,KAAmB,WAAnB,IAAkC,CAAC,MAAM,OAA7C,EAAsD;AAC3D,gBAAM,IAAI,KAAJ,CAAU,YAAY,MAAM,SAAN,EAAZ,GAAgC,6FAA1C,CAAN;AACD;;AAED,eAAO,KAAP;AACD;AArDI,KAtDF;;AA8GL,UAAM;;AAEJ;;;;;;;AAOA,YAAM,UAAS,KAAT,EAAgB,IAAhB,EAAsB;AAC1B,aAAK,MAAL,CAAY,UAAZ,GAAyB,KAAK,MAAL,CAAY,UAAZ,CAAuB,MAAvB,CAA8B,IAA9B,CAAzB;AACA,cAAM,OAAN,CAAc,OAAd,GAAwB,IAAxB;AACA,eAAO,IAAP;AACD,OAbG;;AAeJ;;;;;AAKA,YAAM,UAAS,KAAT,EAAgB;AACpB,gBAAQ,IAAR,CAAa,KAAb;AACD,OAtBG;;AAwBJ;;;;;AAKA,eAAS,UAAS,CAAT,EAAY;AACnB,gBAAQ,OAAR,CAAgB,CAAhB;AACD;AA/BG;AA9GD,GAAP;AAgJD,CAjJD","file":"common-compiled.js","sourcesContent":["'use strict';\n\nvar Suite = require('../suite');\n\n/**\n * Functions common to more than one interface.\n *\n * @param {Suite[]} suites\n * @param {Context} context\n * @param {Mocha} mocha\n * @return {Object} An object containing common functions.\n */\nmodule.exports = function(suites, context, mocha) {\n  return {\n    /**\n     * This is only present if flag --delay is passed into Mocha. It triggers\n     * root suite execution.\n     *\n     * @param {Suite} suite The root wuite.\n     * @return {Function} A function which runs the root suite\n     */\n    runWithSuite: function runWithSuite(suite) {\n      return function run() {\n        suite.run();\n      };\n    },\n\n    /**\n     * Execute before running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    before: function(name, fn) {\n      suites[0].beforeAll(name, fn);\n    },\n\n    /**\n     * Execute after running tests.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    after: function(name, fn) {\n      suites[0].afterAll(name, fn);\n    },\n\n    /**\n     * Execute before each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    beforeEach: function(name, fn) {\n      suites[0].beforeEach(name, fn);\n    },\n\n    /**\n     * Execute after each test case.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    afterEach: function(name, fn) {\n      suites[0].afterEach(name, fn);\n    },\n\n    suite: {\n      /**\n       * Create an exclusive Suite; convenience function\n       * See docstring for create() below.\n       *\n       * @param {Object} opts\n       * @returns {Suite}\n       */\n      only: function only(opts) {\n        mocha.options.hasOnly = true;\n        opts.isOnly = true;\n        return this.create(opts);\n      },\n\n      /**\n       * Create a Suite, but skip it; convenience function\n       * See docstring for create() below.\n       *\n       * @param {Object} opts\n       * @returns {Suite}\n       */\n      skip: function skip(opts) {\n        opts.pending = true;\n        return this.create(opts);\n      },\n\n      /**\n       * Creates a suite.\n       * @param {Object} opts Options\n       * @param {string} opts.title Title of Suite\n       * @param {Function} [opts.fn] Suite Function (not always applicable)\n       * @param {boolean} [opts.pending] Is Suite pending?\n       * @param {string} [opts.file] Filepath where this Suite resides\n       * @param {boolean} [opts.isOnly] Is Suite exclusive?\n       * @returns {Suite}\n       */\n      create: function create(opts) {\n        var suite = Suite.create(suites[0], opts.title);\n        suite.pending = Boolean(opts.pending);\n        suite.file = opts.file;\n        suites.unshift(suite);\n        if (opts.isOnly) {\n          suite.parent._onlySuites = suite.parent._onlySuites.concat(suite);\n          mocha.options.hasOnly = true;\n        }\n        if (typeof opts.fn === 'function') {\n          opts.fn.call(suite);\n          suites.shift();\n        } else if (typeof opts.fn === 'undefined' && !suite.pending) {\n          throw new Error('Suite \"' + suite.fullTitle() + '\" was defined but no callback was supplied. Supply a callback or explicitly skip the suite.');\n        }\n\n        return suite;\n      }\n    },\n\n    test: {\n\n      /**\n       * Exclusive test-case.\n       *\n       * @param {Object} mocha\n       * @param {Function} test\n       * @returns {*}\n       */\n      only: function(mocha, test) {\n        test.parent._onlyTests = test.parent._onlyTests.concat(test);\n        mocha.options.hasOnly = true;\n        return test;\n      },\n\n      /**\n       * Pending test case.\n       *\n       * @param {string} title\n       */\n      skip: function(title) {\n        context.test(title);\n      },\n\n      /**\n       * Number of retry attempts\n       *\n       * @param {number} n\n       */\n      retries: function(n) {\n        context.retries(n);\n      }\n    }\n  };\n};\n"]}