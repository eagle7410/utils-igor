{"version":3,"sources":["list.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,QAAQ,QAAQ,KAAR,CAAZ;;AAEA,SAAS,WAAT,CAAsB,IAAtB,EAA4B;AAC1B,SAAO,EAAE,MAAM,EAAE,MAAM,IAAR,EAAR,EAAwB,MAAM,EAA9B,EAAP;AACD;;AAED,KAAK,aAAL,EAAoB,UAAU,CAAV,EAAa;AAC/B,MAAI,UAAU,YAAY,CACxB,EAAE,IAAI,KAAN,EADwB,EACT,EAAE,IAAI,KAAN,EAAa,UAAU,KAAvB,EADS,EACuB,EAAE,IAAI,OAAN,EAAe,UAAU,KAAzB,EADvB,EACyD,EAAE,IAAI,MAAN,EADzD,CAAZ,CAAd;AAGA,UAAQ,IAAR,CAAa,GAAb,GAAmB,CAAnB;;AAEA,IAAE,SAAF,CAAY,MAAM,WAAN,CAAkB,IAAlB,CAAuB,EAAE,IAAI,KAAN,EAAvB,EAAsC,OAAtC,CAAZ,EAA4D,CAC1D,EAAE,IAAI,KAAN,EAAa,UAAU,KAAvB,EAD0D,EAC1B,EAAE,IAAI,OAAN,EAAe,UAAU,KAAzB,EAD0B,CAA5D;;AAIA,YAAU,YAAY,CACpB,EAAE,IAAI,KAAN,EADoB,EACL,EAAE,IAAI,KAAN,EAAa,UAAU,KAAvB,EADK,EAC2B,EAAE,IAAI,OAAN,EAAe,UAAU,KAAzB,EAD3B,EAC6D,EAAE,IAAI,MAAN,EAD7D,CAAZ,CAAV;AAGA,UAAQ,IAAR,CAAa,GAAb,GAAmB,CAAnB;;AAEA,IAAE,SAAF,CAAY,MAAM,WAAN,CAAkB,IAAlB,CAAuB,EAAE,IAAI,KAAN,EAAvB,EAAsC,OAAtC,CAAZ,EAA4D,CAC1D,EAAE,IAAI,OAAN,EAAe,UAAU,KAAzB,EAD0D,CAA5D;;AAIA,YAAU,YAAY,CACpB,EAAE,IAAI,KAAN,EADoB,EACL,EAAE,IAAI,KAAN,EAAa,UAAU,KAAvB,EADK,EAC2B,EAAE,IAAI,OAAN,EAAe,UAAU,KAAzB,EAD3B,EAC6D,EAAE,IAAI,MAAN,EAD7D,CAAZ,CAAV;AAGA,UAAQ,IAAR,CAAa,GAAb,GAAmB,CAAnB;;AAEA,IAAE,SAAF,CAAY,MAAM,WAAN,CAAkB,IAAlB,CAAuB,EAAE,IAAI,MAAN,EAAvB,EAAuC,OAAvC,CAAZ,EAA6D,EAA7D;AACA,IAAE,GAAF;AACD,CA1BD","file":"list-compiled.js","sourcesContent":["var test = require('tape')\nvar ddata = require('../')\n\nfunction makeOptions (data) {\n  return { data: { root: data }, hash: {} }\n}\n\ntest('descendants', function (t) {\n  var options = makeOptions([\n    { id: 'one' }, { id: 'two', memberof: 'one' }, { id: 'three', memberof: 'two' }, { id: 'four' }\n  ])\n  options.hash.min = 0\n\n  t.deepEqual(ddata.descendants.call({ id: 'one' }, options), [\n    { id: 'two', memberof: 'one' }, { id: 'three', memberof: 'two' }\n  ])\n\n  options = makeOptions([\n    { id: 'one' }, { id: 'two', memberof: 'one' }, { id: 'three', memberof: 'two' }, { id: 'four' }\n  ])\n  options.hash.min = 0\n\n  t.deepEqual(ddata.descendants.call({ id: 'two' }, options), [\n    { id: 'three', memberof: 'two' }\n  ])\n\n  options = makeOptions([\n    { id: 'one' }, { id: 'two', memberof: 'one' }, { id: 'three', memberof: 'two' }, { id: 'four' }\n  ])\n  options.hash.min = 0\n\n  t.deepEqual(ddata.descendants.call({ id: 'four' }, options), [])\n  t.end()\n})\n"]}