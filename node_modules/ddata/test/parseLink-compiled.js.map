{"version":3,"sources":["parseLink.js"],"names":[],"mappings":"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","file":"parseLink-compiled.js","sourcesContent":["'use strict'\nvar test = require('tape')\nvar ddata = require('../')\n\ntest('{@link someSymbol}', function (t) {\n  var text = 'blah {@link someSymbol}'\n  var result = [ { original: '{@link someSymbol}', caption: 'someSymbol', url: 'someSymbol' } ]\n  t.deepEqual(ddata.parseLink(text), result)\n  t.end()\n})\n\ntest('{@link http://some.url.com}', function (t) {\n  var text = 'blah {@link http://some.url.com} blah'\n  var result = [{\n    original: '{@link http://some.url.com}',\n    caption: 'http://some.url.com',\n    url: 'http://some.url.com'\n  }]\n  t.deepEqual(ddata.parseLink(text), result)\n  t.end()\n})\n\ntest('multiple {@link http://some.url.com}', function (t) {\n  var text = 'blah {@link http://one.url.com} blah {@link http://two.url.com} whatever'\n  var result = [\n    {\n      original: '{@link http://one.url.com}',\n      caption: 'http://one.url.com',\n      url: 'http://one.url.com'\n    },\n    {\n      original: '{@link http://two.url.com}',\n      caption: 'http://two.url.com',\n      url: 'http://two.url.com'\n    }\n  ]\n  t.deepEqual(ddata.parseLink(text), result)\n  t.end()\n})\n\ntest('[caption here]{@link someSymbol}', function (t) {\n  var text = 'blah [caption here]{@link someSymbol} blah'\n  var result = [{\n    original: '[caption here]{@link someSymbol}',\n    caption: 'caption here',\n    url: 'someSymbol'\n  }]\n  t.deepEqual(ddata.parseLink(text), result)\n  t.end()\n})\n\ntest('multiple [caption here]{@link someSymbol}', function (t) {\n  var text = 'blah [caption one]{@link thingOne} blah [caption two]{@link thingTwo} whatever'\n  var result = [\n    {\n      original: '[caption one]{@link thingOne}',\n      caption: 'caption one',\n      url: 'thingOne'\n    },\n    {\n      original: '[caption two]{@link thingTwo}',\n      caption: 'caption two',\n      url: 'thingTwo'\n    }\n  ]\n  t.deepEqual(ddata.parseLink(text), result)\n  t.end()\n})\n\ntest('[caption here]{@link http://some.url.com}', function (t) {\n  var text = 'blah [caption here]{@link http://some.url.com} blah'\n  var result = [{\n    original: '[caption here]{@link http://some.url.com}',\n    caption: 'caption here',\n    url: 'http://some.url.com'\n  }]\n  t.deepEqual(ddata.parseLink(text), result)\n  t.end()\n})\n\ntest('multiple {@link someSymbol|caption here}', function (t) {\n  var text = 'blah {@link thingOne|caption one} blah {@link thingTwo|caption two} whatever'\n  var result = [\n    {\n      original: '{@link thingOne|caption one}',\n      caption: 'caption one',\n      url: 'thingOne'\n    },\n    {\n      original: '{@link thingTwo|caption two}',\n      caption: 'caption two',\n      url: 'thingTwo'\n    }\n  ]\n  t.deepEqual(ddata.parseLink(text), result)\n  t.end()\n})\n\ntest('multiple {@link someSymbol Caption here}', function (t) {\n  var text = 'blah {@link thingOne Caption one} blah {@link thingTwo Caption two} whatever'\n  var result = [\n    {\n      original: '{@link thingOne Caption one}',\n      caption: 'Caption one',\n      url: 'thingOne'\n    },\n    {\n      original: '{@link thingTwo Caption two}',\n      caption: 'Caption two',\n      url: 'thingTwo'\n    }\n  ]\n  t.deepEqual(ddata.parseLink(text), result)\n  t.end()\n})\n"]}