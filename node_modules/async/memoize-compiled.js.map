{"version":3,"sources":["memoize.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AACzC,WAAO;AADkC,CAA7C;AAGA,QAAQ,OAAR,GAAkB,OAAlB;;AAEA,IAAI,YAAY,QAAQ,iBAAR,CAAhB;;AAEA,IAAI,aAAa,uBAAuB,SAAvB,CAAjB;;AAEA,IAAI,QAAQ,QAAQ,aAAR,CAAZ;;AAEA,IAAI,SAAS,uBAAuB,KAAvB,CAAb;;AAEA,IAAI,gBAAgB,QAAQ,yBAAR,CAApB;;AAEA,IAAI,iBAAiB,uBAAuB,aAAvB,CAArB;;AAEA,IAAI,iBAAiB,QAAQ,0BAAR,CAArB;;AAEA,IAAI,kBAAkB,uBAAuB,cAAvB,CAAtB;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,WAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;AAE/F,SAAS,GAAT,CAAa,GAAb,EAAkB,GAAlB,EAAuB;AACnB,WAAO,OAAO,GAAd;AACH;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,SAAS,OAAT,CAAiB,EAAjB,EAAqB,MAArB,EAA6B;AACzB,QAAI,OAAO,OAAO,MAAP,CAAc,IAAd,CAAX;AACA,QAAI,SAAS,OAAO,MAAP,CAAc,IAAd,CAAb;AACA,aAAS,UAAU,WAAW,OAA9B;AACA,QAAI,WAAW,CAAC,GAAG,gBAAgB,OAApB,EAA6B,SAAS,QAAT,CAAkB,IAAlB,EAAwB,QAAxB,EAAkC;AAC1E,YAAI,MAAM,OAAO,KAAP,CAAa,IAAb,EAAmB,IAAnB,CAAV;AACA,YAAI,IAAI,IAAJ,EAAU,GAAV,CAAJ,EAAoB;AAChB,aAAC,GAAG,eAAe,OAAnB,EAA4B,YAAY;AACpC,yBAAS,KAAT,CAAe,IAAf,EAAqB,KAAK,GAAL,CAArB;AACH,aAFD;AAGH,SAJD,MAIO,IAAI,IAAI,MAAJ,EAAY,GAAZ,CAAJ,EAAsB;AACzB,mBAAO,GAAP,EAAY,IAAZ,CAAiB,QAAjB;AACH,SAFM,MAEA;AACH,mBAAO,GAAP,IAAc,CAAC,QAAD,CAAd;AACA,eAAG,KAAH,CAAS,IAAT,EAAe,KAAK,MAAL,CAAY,CAAC,CAAC,GAAG,OAAO,OAAX,EAAoB,UAAU,IAAV,EAAgB;AAC5D,qBAAK,GAAL,IAAY,IAAZ;AACA,oBAAI,IAAI,OAAO,GAAP,CAAR;AACA,uBAAO,OAAO,GAAP,CAAP;AACA,qBAAK,IAAI,IAAI,CAAR,EAAW,IAAI,EAAE,MAAtB,EAA8B,IAAI,CAAlC,EAAqC,GAArC,EAA0C;AACtC,sBAAE,CAAF,EAAK,KAAL,CAAW,IAAX,EAAiB,IAAjB;AACH;AACJ,aAP2B,CAAD,CAAZ,CAAf;AAQH;AACJ,KAnBc,CAAf;AAoBA,aAAS,IAAT,GAAgB,IAAhB;AACA,aAAS,UAAT,GAAsB,EAAtB;AACA,WAAO,QAAP;AACH;AACD,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"memoize-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = memoize;\n\nvar _identity = require('lodash/identity');\n\nvar _identity2 = _interopRequireDefault(_identity);\n\nvar _rest = require('lodash/rest');\n\nvar _rest2 = _interopRequireDefault(_rest);\n\nvar _setImmediate = require('./internal/setImmediate');\n\nvar _setImmediate2 = _interopRequireDefault(_setImmediate);\n\nvar _initialParams = require('./internal/initialParams');\n\nvar _initialParams2 = _interopRequireDefault(_initialParams);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction has(obj, key) {\n    return key in obj;\n}\n\n/**\n * Caches the results of an `async` function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {Function} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    hasher = hasher || _identity2.default;\n    var memoized = (0, _initialParams2.default)(function memoized(args, callback) {\n        var key = hasher.apply(null, args);\n        if (has(memo, key)) {\n            (0, _setImmediate2.default)(function () {\n                callback.apply(null, memo[key]);\n            });\n        } else if (has(queues, key)) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            fn.apply(null, args.concat([(0, _rest2.default)(function (args) {\n                memo[key] = args;\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i].apply(null, args);\n                }\n            })]));\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\nmodule.exports = exports['default'];"]}