{"version":3,"sources":["rejectLimit.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AAC3C,SAAO;AADoC,CAA7C;;AAIA,IAAI,UAAU,QAAQ,mBAAR,CAAd;;AAEA,IAAI,WAAW,uBAAuB,OAAvB,CAAf;;AAEA,IAAI,mBAAmB,QAAQ,4BAAR,CAAvB;;AAEA,IAAI,oBAAoB,uBAAuB,gBAAvB,CAAxB;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,SAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;AAkBA,QAAQ,OAAR,GAAkB,CAAC,GAAG,kBAAkB,OAAtB,EAA+B,SAAS,OAAxC,CAAlB;AACA,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"rejectLimit-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reject = require('./internal/reject');\n\nvar _reject2 = _interopRequireDefault(_reject);\n\nvar _doParallelLimit = require('./internal/doParallelLimit');\n\nvar _doParallelLimit2 = _interopRequireDefault(_doParallelLimit);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nexports.default = (0, _doParallelLimit2.default)(_reject2.default);\nmodule.exports = exports['default'];"]}