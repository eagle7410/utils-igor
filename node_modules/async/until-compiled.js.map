{"version":3,"sources":["until.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AACzC,WAAO;AADkC,CAA7C;AAGA,QAAQ,OAAR,GAAkB,KAAlB;;AAEA,IAAI,UAAU,QAAQ,UAAR,CAAd;;AAEA,IAAI,WAAW,uBAAuB,OAAvB,CAAf;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,WAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAS,KAAT,CAAe,IAAf,EAAqB,EAArB,EAAyB,QAAzB,EAAmC;AAC/B,KAAC,GAAG,SAAS,OAAb,EAAsB,YAAY;AAC9B,eAAO,CAAC,KAAK,KAAL,CAAW,IAAX,EAAiB,SAAjB,CAAR;AACH,KAFD,EAEG,EAFH,EAEO,QAFP;AAGH;AACD,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"until-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = until;\n\nvar _whilst = require('./whilst');\n\nvar _whilst2 = _interopRequireDefault(_whilst);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Repeatedly call `fn` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `fn`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `fn`. Invoked with ().\n * @param {Function} fn - A function which is called each time `test` fails.\n * The function is passed a `callback(err)`, which must be called once it has\n * completed with an optional `err` argument. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `fn`'s\n * callback. Invoked with (err, [results]);\n */\nfunction until(test, fn, callback) {\n    (0, _whilst2.default)(function () {\n        return !test.apply(this, arguments);\n    }, fn, callback);\n}\nmodule.exports = exports['default'];"]}