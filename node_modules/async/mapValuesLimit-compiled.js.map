{"version":3,"sources":["mapValuesLimit.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C;AACzC,WAAO;AADkC,CAA7C;AAGA,QAAQ,OAAR,GAAkB,cAAlB;;AAEA,IAAI,eAAe,QAAQ,eAAR,CAAnB;;AAEA,IAAI,gBAAgB,uBAAuB,YAAvB,CAApB;;AAEA,IAAI,QAAQ,QAAQ,aAAR,CAAZ;;AAEA,IAAI,SAAS,uBAAuB,KAAvB,CAAb;;AAEA,IAAI,QAAQ,QAAQ,iBAAR,CAAZ;;AAEA,IAAI,SAAS,uBAAuB,KAAvB,CAAb;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,WAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;AAE/F;;;;;;;;;;;;;;;;;;;;AAoBA,SAAS,cAAT,CAAwB,GAAxB,EAA6B,KAA7B,EAAoC,QAApC,EAA8C,QAA9C,EAAwD;AACpD,eAAW,CAAC,GAAG,OAAO,OAAX,EAAoB,YAAY,OAAO,OAAvC,CAAX;AACA,QAAI,SAAS,EAAb;AACA,KAAC,GAAG,cAAc,OAAlB,EAA2B,GAA3B,EAAgC,KAAhC,EAAuC,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAC7D,iBAAS,GAAT,EAAc,GAAd,EAAmB,UAAU,GAAV,EAAe,MAAf,EAAuB;AACtC,gBAAI,GAAJ,EAAS,OAAO,KAAK,GAAL,CAAP;AACT,mBAAO,GAAP,IAAc,MAAd;AACA;AACH,SAJD;AAKH,KAND,EAMG,UAAU,GAAV,EAAe;AACd,iBAAS,GAAT,EAAc,MAAd;AACH,KARD;AASH;AACD,OAAO,OAAP,GAAiB,QAAQ,SAAR,CAAjB","file":"mapValuesLimit-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = mapValuesLimit;\n\nvar _eachOfLimit = require('./eachOfLimit');\n\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\n\nvar _noop = require('lodash/noop');\n\nvar _noop2 = _interopRequireDefault(_noop);\n\nvar _once = require('./internal/once');\n\nvar _once2 = _interopRequireDefault(_once);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A function to apply to each value in `obj`.\n * The iteratee is passed a `callback(err, transformed)` which must be called\n * once it has completed with an error (which can be `null`) and a\n * transformed value. Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an object of the\n * transformed values from the `obj`. Invoked with (err, result).\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = (0, _once2.default)(callback || _noop2.default);\n    var newObj = {};\n    (0, _eachOfLimit2.default)(obj, limit, function (val, key, next) {\n        iteratee(val, key, function (err, result) {\n            if (err) return next(err);\n            newObj[key] = result;\n            next();\n        });\n    }, function (err) {\n        callback(err, newObj);\n    });\n}\nmodule.exports = exports['default'];"]}