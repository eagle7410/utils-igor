{"version":3,"sources":["_hasUnicode.js"],"names":[],"mappings":"AAAA;AACA,IAAI,gBAAgB,iBAApB;AAAA,IACI,oBAAoB,gCADxB;AAAA,IAEI,sBAAsB,iBAF1B;AAAA,IAGI,aAAa,gBAHjB;;AAKA;AACA,IAAI,QAAQ,SAAZ;;AAEA;AACA,IAAI,eAAe,OAAO,MAAM,KAAN,GAAc,aAAd,GAA+B,iBAA/B,GAAmD,mBAAnD,GAAyE,UAAzE,GAAsF,GAA7F,CAAnB;;AAEA;;;;;;;AAOA,SAAS,UAAT,CAAoB,MAApB,EAA4B;AAC1B,SAAO,aAAa,IAAb,CAAkB,MAAlB,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,UAAjB","file":"_hasUnicode-compiled.js","sourcesContent":["/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n"]}