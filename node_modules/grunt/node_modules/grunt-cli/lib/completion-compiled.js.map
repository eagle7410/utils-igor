{"version":3,"sources":["completion.js"],"names":[],"mappings":"AAAA;;;;;;;;;AASA;;AAEA;;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,QAAQ,KAAR,GAAgB,UAAS,IAAT,EAAe;AAC7B,MAAI,OAAO,CAAX;AACA,MAAI,WAAW,KAAK,IAAL,CAAU,SAAV,EAAqB,eAArB,EAAsC,IAAtC,CAAf;AACA,MAAI,MAAJ;AACA,MAAI;AACF;AACA,aAAS,OAAO,GAAG,YAAH,CAAgB,QAAhB,CAAP,CAAT;AACD,GAHD,CAGE,OAAO,GAAP,EAAY;AACZ,WAAO,CAAP;AACA,aAAS,oDAAT;AACA,QAAI,QAAQ,SAAS,MAArB,EAA6B;AAC3B,gBAAU,WAAW,IAAX,GAAkB,KAA5B;AACD;AACD,cAAU,aAAV;AACD;;AAED,UAAQ,GAAR,CAAY,MAAZ;AACA,UAAQ,IAAR,CAAa,IAAb;AACD,CAlBD","file":"completion-compiled.js","sourcesContent":["/*\n * grunt-cli\n * http://gruntjs.com/\n *\n * Copyright (c) 2016 Tyler Kellen, contributors\n * Licensed under the MIT license.\n * https://github.com/gruntjs/grunt-init/blob/master/LICENSE-MIT\n */\n\n'use strict';\n\n// Nodejs libs.\nvar fs = require('fs');\nvar path = require('path');\n\nexports.print = function(name) {\n  var code = 0;\n  var filepath = path.join(__dirname, '../completion', name);\n  var output;\n  try {\n    // Attempt to read shell completion file.\n    output = String(fs.readFileSync(filepath));\n  } catch (err) {\n    code = 5;\n    output = 'echo \"Specified grunt shell auto-completion rules ';\n    if (name && name !== 'true') {\n      output += 'for \\'' + name + '\\' ';\n    }\n    output += 'not found.\"';\n  }\n\n  console.log(output);\n  process.exit(code);\n};\n"]}