{"version":3,"sources":["task.js"],"names":[],"mappings":"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","file":"task-compiled.js","sourcesContent":["'use strict';\n\nvar grunt = require('../grunt');\n\n// Nodejs libs.\nvar path = require('path');\n\n// Extend generic \"task\" util lib.\nvar parent = grunt.util.task.create();\n\n// The module to be exported.\nvar task = module.exports = Object.create(parent);\n\n// A temporary registry of tasks and metadata.\nvar registry = {tasks: [], untasks: [], meta: {}};\n\n// The last specified tasks message.\nvar lastInfo;\n\n// Number of levels of recursion when loading tasks in collections.\nvar loadTaskDepth = 0;\n\n// Keep track of the number of log.error() calls.\nvar errorcount;\n\n// Override built-in registerTask.\ntask.registerTask = function(name) {\n  // Add task to registry.\n  registry.tasks.push(name);\n  // Register task.\n  parent.registerTask.apply(task, arguments);\n  // This task, now that it's been registered.\n  var thisTask = task._tasks[name];\n  // Metadata about the current task.\n  thisTask.meta = grunt.util._.clone(registry.meta);\n  // Override task function.\n  var _fn = thisTask.fn;\n  thisTask.fn = function(arg) {\n    // Guaranteed to always be the actual task name.\n    var name = thisTask.name;\n    // Initialize the errorcount for this task.\n    errorcount = grunt.fail.errorcount;\n    // Return the number of errors logged during this task.\n    Object.defineProperty(this, 'errorCount', {\n      enumerable: true,\n      get: function() {\n        return grunt.fail.errorcount - errorcount;\n      }\n    });\n    // Expose task.requires on `this`.\n    this.requires = task.requires.bind(task);\n    // Expose config.requires on `this`.\n    this.requiresConfig = grunt.config.requires;\n    // Return an options object with the specified defaults overwritten by task-\n    // specific overrides, via the \"options\" property.\n    this.options = function() {\n      var args = [{}].concat(grunt.util.toArray(arguments)).concat([\n        grunt.config([name, 'options'])\n      ]);\n      var options = grunt.util._.extend.apply(null, args);\n      grunt.verbose.writeflags(options, 'Options');\n      return options;\n    };\n    // If this task was an alias or a multi task called without a target,\n    // only log if in verbose mode.\n    var logger = _fn.alias || (thisTask.multi && (!arg || arg === '*')) ? 'verbose' : 'log';\n    // Actually log.\n    grunt[logger].header('Running \"' + this.nameArgs + '\"' +\n      (this.name !== this.nameArgs ? ' (' + this.name + ')' : '') + ' task');\n    // If --debug was specified, log the path to this task's source file.\n    grunt[logger].debug('Task source: ' + thisTask.meta.filepath);\n    // Actually run the task.\n    return _fn.apply(this, arguments);\n  };\n  return task;\n};\n\n// Multi task targets can't start with _ or be a reserved property (options).\nfunction isValidMultiTaskTarget(target) {\n  return !/^_|^options$/.test(target);\n}\n\n// Normalize multi task files.\ntask.normalizeMultiTaskFiles = function(data, target) {\n  var prop, obj;\n  var files = [];\n  if (grunt.util.kindOf(data) === 'object') {\n    if ('src' in data || 'dest' in data) {\n      obj = {};\n      for (prop in data) {\n        if (prop !== 'options') {\n          obj[prop] = data[prop];\n        }\n      }\n      files.push(obj);\n    } else if (grunt.util.kindOf(data.files) === 'object') {\n      for (prop in data.files) {\n        files.push({src: data.files[prop], dest: grunt.config.process(prop)});\n      }\n    } else if (Array.isArray(data.files)) {\n      grunt.util._.flattenDeep(data.files).forEach(function(obj) {\n        var prop;\n        if ('src' in obj || 'dest' in obj) {\n          files.push(obj);\n        } else {\n          for (prop in obj) {\n            files.push({src: obj[prop], dest: grunt.config.process(prop)});\n          }\n        }\n      });\n    }\n  } else {\n    files.push({src: data, dest: grunt.config.process(target)});\n  }\n\n  // If no src/dest or files were specified, return an empty files array.\n  if (files.length === 0) {\n    grunt.verbose.writeln('File: ' + '[no files]'.yellow);\n    return [];\n  }\n\n  // Process all normalized file objects.\n  files = grunt.util._(files).chain().forEach(function(obj) {\n    if (!('src' in obj) || !obj.src) { return; }\n    // Normalize .src properties to flattened array.\n    if (Array.isArray(obj.src)) {\n      obj.src = grunt.util._.flatten(obj.src);\n    } else {\n      obj.src = [obj.src];\n    }\n  }).map(function(obj) {\n    // Build options object, removing unwanted properties.\n    var expandOptions = grunt.util._.extend({}, obj);\n    delete expandOptions.src;\n    delete expandOptions.dest;\n\n    // Expand file mappings.\n    if (obj.expand) {\n      return grunt.file.expandMapping(obj.src, obj.dest, expandOptions).map(function(mapObj) {\n        // Copy obj properties to result.\n        var result = grunt.util._.extend({}, obj);\n        // Make a clone of the orig obj available.\n        result.orig = grunt.util._.extend({}, obj);\n        // Set .src and .dest, processing both as templates.\n        result.src = grunt.config.process(mapObj.src);\n        result.dest = grunt.config.process(mapObj.dest);\n        // Remove unwanted properties.\n        ['expand', 'cwd', 'flatten', 'rename', 'ext'].forEach(function(prop) {\n          delete result[prop];\n        });\n        return result;\n      });\n    }\n\n    // Copy obj properties to result, adding an .orig property.\n    var result = grunt.util._.extend({}, obj);\n    // Make a clone of the orig obj available.\n    result.orig = grunt.util._.extend({}, obj);\n\n    if ('src' in result) {\n      // Expose an expand-on-demand getter method as .src.\n      Object.defineProperty(result, 'src', {\n        enumerable: true,\n        get: function fn() {\n          var src;\n          if (!('result' in fn)) {\n            src = obj.src;\n            // If src is an array, flatten it. Otherwise, make it into an array.\n            src = Array.isArray(src) ? grunt.util._.flatten(src) : [src];\n            // Expand src files, memoizing result.\n            fn.result = grunt.file.expand(expandOptions, src);\n          }\n          return fn.result;\n        }\n      });\n    }\n\n    if ('dest' in result) {\n      result.dest = obj.dest;\n    }\n\n    return result;\n  }).flatten().value();\n\n  // Log this.file src and dest properties when --verbose is specified.\n  if (grunt.option('verbose')) {\n    files.forEach(function(obj) {\n      var output = [];\n      if ('src' in obj) {\n        output.push(obj.src.length > 0 ? grunt.log.wordlist(obj.src) : '[no src]'.yellow);\n      }\n      if ('dest' in obj) {\n        output.push('-> ' + (obj.dest ? String(obj.dest).cyan : '[no dest]'.yellow));\n      }\n      if (output.length > 0) {\n        grunt.verbose.writeln('Files: ' + output.join(' '));\n      }\n    });\n  }\n\n  return files;\n};\n\n// This is the most common \"multi task\" pattern.\ntask.registerMultiTask = function(name, info, fn) {\n  // If optional \"info\" string is omitted, shuffle arguments a bit.\n  if (fn == null) {\n    fn = info;\n    info = 'Custom multi task.';\n  }\n  // Store a reference to the task object, in case the task gets renamed.\n  var thisTask;\n  task.registerTask(name, info, function(target) {\n    // Guaranteed to always be the actual task name.\n    var name = thisTask.name;\n    // Arguments (sans target) as an array.\n    this.args = grunt.util.toArray(arguments).slice(1);\n    // If a target wasn't specified, run this task once for each target.\n    if (!target || target === '*') {\n      return task.runAllTargets(name, this.args);\n    } else if (!isValidMultiTaskTarget(target)) {\n      throw new Error('Invalid target \"' + target + '\" specified.');\n    }\n    // Fail if any required config properties have been omitted.\n    this.requiresConfig([name, target]);\n    // Return an options object with the specified defaults overwritten by task-\n    // and/or target-specific overrides, via the \"options\" property.\n    this.options = function() {\n      var targetObj = grunt.config([name, target]);\n      var args = [{}].concat(grunt.util.toArray(arguments)).concat([\n        grunt.config([name, 'options']),\n        grunt.util.kindOf(targetObj) === 'object' ? targetObj.options : {}\n      ]);\n      var options = grunt.util._.extend.apply(null, args);\n      grunt.verbose.writeflags(options, 'Options');\n      return options;\n    };\n    // Expose the current target.\n    this.target = target;\n    // Recreate flags object so that the target isn't set as a flag.\n    this.flags = {};\n    this.args.forEach(function(arg) { this.flags[arg] = true; }, this);\n    // Expose data on `this` (as well as task.current).\n    this.data = grunt.config([name, target]);\n    // Expose normalized files object.\n    this.files = task.normalizeMultiTaskFiles(this.data, target);\n    // Expose normalized, flattened, uniqued array of src files.\n    Object.defineProperty(this, 'filesSrc', {\n      enumerable: true,\n      get: function() {\n        return grunt.util._(this.files).chain().map('src').flatten().uniq().value();\n      }.bind(this)\n    });\n    // Call original task function, passing in the target and any other args.\n    return fn.apply(this, this.args);\n  });\n\n  thisTask = task._tasks[name];\n  thisTask.multi = true;\n};\n\n// Init tasks don't require properties in config, and as such will preempt\n// config loading errors.\ntask.registerInitTask = function(name, info, fn) {\n  task.registerTask(name, info, fn);\n  task._tasks[name].init = true;\n};\n\n// Override built-in renameTask to use the registry.\ntask.renameTask = function(oldname, newname) {\n  var result;\n  try {\n    // Actually rename task.\n    result = parent.renameTask.apply(task, arguments);\n    // Add and remove task.\n    registry.untasks.push(oldname);\n    registry.tasks.push(newname);\n    // Return result.\n    return result;\n  } catch (e) {\n    grunt.log.error(e.message);\n  }\n};\n\n// If a property wasn't passed, run all task targets in turn.\ntask.runAllTargets = function(taskname, args) {\n  // Get an array of sub-property keys under the given config object.\n  var targets = Object.keys(grunt.config.getRaw(taskname) || {});\n  // Remove invalid target properties.\n  targets = targets.filter(isValidMultiTaskTarget);\n  // Fail if there are no actual properties to iterate over.\n  if (targets.length === 0) {\n    grunt.log.error('No \"' + taskname + '\" targets found.');\n    return false;\n  }\n  // Iterate over all targets, running a task for each.\n  targets.forEach(function(target) {\n    // Be sure to pass in any additionally specified args.\n    task.run([taskname, target].concat(args || []).join(':'));\n  });\n};\n\n// Load tasks and handlers from a given tasks file.\nvar loadTaskStack = [];\nfunction loadTask(filepath) {\n  // In case this was called recursively, save registry for later.\n  loadTaskStack.push(registry);\n  // Reset registry.\n  registry = {tasks: [], untasks: [], meta: {info: lastInfo, filepath: filepath}};\n  var filename = path.basename(filepath);\n  var msg = 'Loading \"' + filename + '\" tasks...';\n  var regCount = 0;\n  var fn;\n  try {\n    // Load taskfile.\n    fn = require(path.resolve(filepath));\n    if (typeof fn === 'function') {\n      fn.call(grunt, grunt);\n    }\n    grunt.verbose.write(msg).ok();\n    // Log registered/renamed/unregistered tasks.\n    ['un', ''].forEach(function(prefix) {\n      var list = grunt.util._.chain(registry[prefix + 'tasks']).uniq().sort().value();\n      if (list.length > 0) {\n        regCount++;\n        grunt.verbose.writeln((prefix ? '- ' : '+ ') + grunt.log.wordlist(list));\n      }\n    });\n    if (regCount === 0) {\n      grunt.verbose.warn('No tasks were registered or unregistered.');\n    }\n  } catch (e) {\n    // Something went wrong.\n    grunt.log.write(msg).error().verbose.error(e.stack).or.error(e);\n  }\n  // Restore registry.\n  registry = loadTaskStack.pop() || {};\n}\n\n// Log a message when loading tasks.\nfunction loadTasksMessage(info) {\n  // Only keep track of names of top-level loaded tasks and collections,\n  // not sub-tasks.\n  if (loadTaskDepth === 0) { lastInfo = info; }\n  grunt.verbose.subhead('Registering ' + info + ' tasks.');\n}\n\n// Load tasks and handlers from a given directory.\nfunction loadTasks(tasksdir) {\n  try {\n    var files = grunt.file.glob.sync('*.{js,coffee}', {cwd: tasksdir, maxDepth: 1});\n    // Load tasks from files.\n    files.forEach(function(filename) {\n      loadTask(path.join(tasksdir, filename));\n    });\n  } catch (e) {\n    grunt.log.verbose.error(e.stack).or.error(e);\n  }\n}\n\n// Load tasks and handlers from a given directory.\ntask.loadTasks = function(tasksdir) {\n  loadTasksMessage('\"' + tasksdir + '\"');\n  if (grunt.file.exists(tasksdir)) {\n    loadTasks(tasksdir);\n  } else {\n    grunt.log.error('Tasks directory \"' + tasksdir + '\" not found.');\n  }\n};\n\n// Load tasks and handlers from a given locally-installed Npm module (installed\n// relative to the base dir).\ntask.loadNpmTasks = function(name) {\n  loadTasksMessage('\"' + name + '\" local Npm module');\n  var root = path.resolve('node_modules');\n  var pkgfile = path.join(root, name, 'package.json');\n  var pkg = grunt.file.exists(pkgfile) ? grunt.file.readJSON(pkgfile) : {keywords: []};\n\n  // Process collection plugins.\n  if (pkg.keywords && pkg.keywords.indexOf('gruntcollection') !== -1) {\n    loadTaskDepth++;\n    Object.keys(pkg.dependencies).forEach(function(depName) {\n      // Npm sometimes pulls dependencies out if they're shared, so find\n      // upwards if not found locally.\n      var filepath = grunt.file.findup('node_modules/' + depName, {\n        cwd: path.resolve('node_modules', name),\n        nocase: true\n      });\n      if (filepath) {\n        // Load this task plugin recursively.\n        task.loadNpmTasks(path.relative(root, filepath));\n      }\n    });\n    loadTaskDepth--;\n    return;\n  }\n\n  // Process task plugins.\n  var tasksdir = path.join(root, name, 'tasks');\n  if (grunt.file.exists(tasksdir)) {\n    loadTasks(tasksdir);\n  } else {\n    grunt.log.error('Local Npm module \"' + name + '\" not found. Is it installed?');\n  }\n};\n\n// Initialize tasks.\ntask.init = function(tasks, options) {\n  if (!options) { options = {}; }\n\n  // Were only init tasks specified?\n  var allInit = tasks.length > 0 && tasks.every(function(name) {\n    var obj = task._taskPlusArgs(name).task;\n    return obj && obj.init;\n  });\n\n  // Get any local Gruntfile or tasks that might exist. Use --gruntfile override\n  // if specified, otherwise search the current directory or any parent.\n  var gruntfile, msg;\n  if (allInit || options.gruntfile === false) {\n    gruntfile = null;\n  } else {\n    gruntfile = grunt.option('gruntfile') ||\n      grunt.file.findup('Gruntfile.{js,coffee}', {nocase: true});\n    msg = 'Reading \"' + (gruntfile ? path.basename(gruntfile) : '???') + '\" Gruntfile...';\n  }\n\n  if (options.gruntfile === false) {\n    // Grunt was run as a lib with {gruntfile: false}.\n  } else if (gruntfile && grunt.file.exists(gruntfile)) {\n    grunt.verbose.writeln().write(msg).ok();\n    // Change working directory so that all paths are relative to the\n    // Gruntfile's location (or the --base option, if specified).\n    process.chdir(grunt.option('base') || path.dirname(gruntfile));\n    // Load local tasks, if the file exists.\n    loadTasksMessage('Gruntfile');\n    loadTask(gruntfile);\n  } else if (options.help || allInit) {\n    // Don't complain about missing Gruntfile.\n  } else if (grunt.option('gruntfile')) {\n    // If --config override was specified and it doesn't exist, complain.\n    grunt.log.writeln().write(msg).error();\n    grunt.fatal('Unable to find \"' + gruntfile + '\" Gruntfile.', grunt.fail.code.MISSING_GRUNTFILE);\n  } else if (!grunt.option('help')) {\n    grunt.verbose.writeln().write(msg).error();\n    grunt.log.writelns(\n      'A valid Gruntfile could not be found. Please see the getting ' +\n      'started guide for more information on how to configure grunt: ' +\n      'http://gruntjs.com/getting-started'\n    );\n    grunt.fatal('Unable to find Gruntfile.', grunt.fail.code.MISSING_GRUNTFILE);\n  }\n\n  // Load all user-specified --npm tasks.\n  (grunt.option('npm') || []).map(String).forEach(task.loadNpmTasks);\n  // Load all user-specified --tasks.\n  (grunt.option('tasks') || []).map(String).forEach(task.loadTasks);\n};\n"]}