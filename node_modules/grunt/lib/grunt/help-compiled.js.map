{"version":3,"sources":["help.js"],"names":[],"mappings":"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","file":"help-compiled.js","sourcesContent":["'use strict';\n\nvar grunt = require('../grunt');\n\n// Nodejs libs.\nvar path = require('path');\n\n// Set column widths.\nvar col1len = 0;\nexports.initCol1 = function(str) {\n  col1len = Math.max(col1len, str.length);\n};\nexports.initWidths = function() {\n  // Widths for options/tasks table output.\n  exports.widths = [1, col1len, 2, 76 - col1len];\n};\n\n// Render an array in table form.\nexports.table = function(arr) {\n  arr.forEach(function(item) {\n    grunt.log.writetableln(exports.widths, ['', grunt.util._.pad(item[0], col1len), '', item[1]]);\n  });\n};\n\n// Methods to run, in-order.\nexports.queue = [\n  'initOptions',\n  'initTasks',\n  'initWidths',\n  'header',\n  'usage',\n  'options',\n  'optionsFooter',\n  'tasks',\n  'footer',\n];\n\n// Actually display stuff.\nexports.display = function() {\n  exports.queue.forEach(function(name) { exports[name](); });\n};\n\n// Header.\nexports.header = function() {\n  grunt.log.writeln('Grunt: The JavaScript Task Runner (v' + grunt.version + ')');\n};\n\n// Usage info.\nexports.usage = function() {\n  grunt.log.header('Usage');\n  grunt.log.writeln(' ' + path.basename(process.argv[1]) + ' [options] [task [task ...]]');\n};\n\n// Options.\nexports.initOptions = function() {\n  // Build 2-column array for table view.\n  exports._options = Object.keys(grunt.cli.optlist).map(function(long) {\n    var o = grunt.cli.optlist[long];\n    var col1 = '--' + (o.negate ? 'no-' : '') + long + (o.short ? ', -' + o.short : '');\n    exports.initCol1(col1);\n    return [col1, o.info];\n  });\n};\n\nexports.options = function() {\n  grunt.log.header('Options');\n  exports.table(exports._options);\n};\n\nexports.optionsFooter = function() {\n  grunt.log.writeln().writelns(\n    'Options marked with * have methods exposed via the grunt API and should ' +\n    'instead be specified inside the Gruntfile wherever possible.'\n  );\n};\n\n// Tasks.\nexports.initTasks = function() {\n  // Initialize task system so that the tasks can be listed.\n  grunt.task.init([], {help: true});\n\n  // Build object of tasks by info (where they were loaded from).\n  exports._tasks = [];\n  Object.keys(grunt.task._tasks).forEach(function(name) {\n    exports.initCol1(name);\n    var task = grunt.task._tasks[name];\n    exports._tasks.push(task);\n  });\n};\n\nexports.tasks = function() {\n  grunt.log.header('Available tasks');\n  if (exports._tasks.length === 0) {\n    grunt.log.writeln('(no tasks found)');\n  } else {\n    exports.table(exports._tasks.map(function(task) {\n      var info = task.info;\n      if (task.multi) { info += ' *'; }\n      return [task.name, info];\n    }));\n\n    grunt.log.writeln().writelns(\n      'Tasks run in the order specified. Arguments may be passed to tasks that ' +\n      'accept them by using colons, like \"lint:files\". Tasks marked with * are ' +\n      '\"multi tasks\" and will iterate over all sub-targets if no argument is ' +\n      'specified.'\n    );\n  }\n\n  grunt.log.writeln().writelns(\n    'The list of available tasks may change based on tasks directories or ' +\n    'grunt plugins specified in the Gruntfile or via command-line options.'\n  );\n};\n\n// Footer.\nexports.footer = function() {\n  grunt.log.writeln().writeln('For more information, see http://gruntjs.com/');\n};\n"]}