{"version":3,"sources":["growl.js"],"names":[],"mappings":"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","file":"growl-compiled.js","sourcesContent":["// Growl - Copyright TJ Holowaychuk <tj@vision-media.ca> (MIT Licensed)\n\n/**\n * Module dependencies.\n */\n\nvar exec = require('child_process').exec\n  , fs = require('fs')\n  , path = require('path')\n  , exists = fs.existsSync || path.existsSync\n  , os = require('os')\n  , quote = JSON.stringify\n  , cmd;\n\nfunction which(name) {\n  var paths = process.env.PATH.split(':');\n  var loc;\n\n  for (var i = 0, len = paths.length; i < len; ++i) {\n    loc = path.join(paths[i], name);\n    if (exists(loc)) return loc;\n  }\n}\n\nswitch(os.type()) {\n  case 'Darwin':\n    if (which('terminal-notifier')) {\n      cmd = {\n          type: \"Darwin-NotificationCenter\"\n        , pkg: \"terminal-notifier\"\n        , msg: '-message'\n        , title: '-title'\n        , subtitle: '-subtitle'\n        , icon: '-appIcon'\n        , sound:  '-sound'\n        , url: '-open'\n        , priority: {\n              cmd: '-execute'\n            , range: []\n          }\n      };\n    } else {\n      cmd = {\n          type: \"Darwin-Growl\"\n        , pkg: \"growlnotify\"\n        , msg: '-m'\n        , sticky: '--sticky'\n        , priority: {\n              cmd: '--priority'\n            , range: [\n                -2\n              , -1\n              , 0\n              , 1\n              , 2\n              , \"Very Low\"\n              , \"Moderate\"\n              , \"Normal\"\n              , \"High\"\n              , \"Emergency\"\n            ]\n          }\n      };\n    }\n    break;\n  case 'Linux':\n    if (which('growl')) {\n      cmd = {\n          type: \"Linux-Growl\"\n        , pkg: \"growl\"\n        , msg: '-m'\n        , title: '-title'\n        , subtitle: '-subtitle'\n        , host: {\n            cmd: '-H'\n          , hostname: '192.168.33.1'\n        }\n      };\n    } else {\n      cmd = {\n          type: \"Linux\"\n        , pkg: \"notify-send\"\n        , msg: ''\n        , sticky: '-t 0'\n        , icon: '-i'\n        , priority: {\n            cmd: '-u'\n          , range: [\n              \"low\"\n            , \"normal\"\n            , \"critical\"\n          ]\n        }\n      };\n    }\n    break;\n  case 'Windows_NT':\n    cmd = {\n        type: \"Windows\"\n      , pkg: \"growlnotify\"\n      , msg: ''\n      , sticky: '/s:true'\n      , title: '/t:'\n      , icon: '/i:'\n      , url: '/cu:'\n      , priority: {\n            cmd: '/p:'\n          , range: [\n              -2\n            , -1\n            , 0\n            , 1\n            , 2\n          ]\n        }\n    };\n    break;\n}\n\n/**\n * Expose `growl`.\n */\n\nexports = module.exports = growl;\n\n/**\n * Node-growl version.\n */\n\nexports.version = '1.4.1'\n\n/**\n * Send growl notification _msg_ with _options_.\n *\n * Options:\n *\n *  - title   Notification title\n *  - sticky  Make the notification stick (defaults to false)\n *  - priority  Specify an int or named key (default is 0)\n *  - name    Application name (defaults to growlnotify)\n *  - sound   Sound efect ( in OSx defined in preferences -> sound -> effects) * works only in OSX > 10.8x\n *  - image\n *    - path to an icon sets --iconpath\n *    - path to an image sets --image\n *    - capitalized word sets --appIcon\n *    - filename uses extname as --icon\n *    - otherwise treated as --icon\n *\n * Examples:\n *\n *   growl('New email')\n *   growl('5 new emails', { title: 'Thunderbird' })\n *   growl('5 new emails', { title: 'Thunderbird', sound: 'Purr' })\n *   growl('Email sent', function(){\n *     // ... notification sent\n *   })\n *\n * @param {string} msg\n * @param {object} options\n * @param {function} fn\n * @api public\n */\n\nfunction growl(msg, options, fn) {\n  var image\n    , args\n    , options = options || {}\n    , fn = fn || function(){};\n\n  if (options.exec) {\n    cmd = {\n        type: \"Custom\"\n      , pkg: options.exec\n      , range: []\n    };\n  }\n\n  // noop\n  if (!cmd) return fn(new Error('growl not supported on this platform'));\n  args = [cmd.pkg];\n\n  // image\n  if (image = options.image) {\n    switch(cmd.type) {\n      case 'Darwin-Growl':\n        var flag, ext = path.extname(image).substr(1)\n        flag = flag || ext == 'icns' && 'iconpath'\n        flag = flag || /^[A-Z]/.test(image) && 'appIcon'\n        flag = flag || /^png|gif|jpe?g$/.test(ext) && 'image'\n        flag = flag || ext && (image = ext) && 'icon'\n        flag = flag || 'icon'\n        args.push('--' + flag, quote(image))\n        break;\n      case 'Darwin-NotificationCenter':\n        args.push(cmd.icon, quote(image));\n        break;\n      case 'Linux':\n        args.push(cmd.icon, quote(image));\n        // libnotify defaults to sticky, set a hint for transient notifications\n        if (!options.sticky) args.push('--hint=int:transient:1');\n        break;\n      case 'Windows':\n        args.push(cmd.icon + quote(image));\n        break;\n    }\n  }\n\n  // sticky\n  if (options.sticky) args.push(cmd.sticky);\n\n  // priority\n  if (options.priority) {\n    var priority = options.priority + '';\n    var checkindexOf = cmd.priority.range.indexOf(priority);\n    if (~cmd.priority.range.indexOf(priority)) {\n      args.push(cmd.priority, options.priority);\n    }\n  }\n\n  //sound\n  if(options.sound && cmd.type === 'Darwin-NotificationCenter'){\n    args.push(cmd.sound, options.sound)\n  }\n\n  // name\n  if (options.name && cmd.type === \"Darwin-Growl\") {\n    args.push('--name', options.name);\n  }\n\n  switch(cmd.type) {\n    case 'Darwin-Growl':\n      args.push(cmd.msg);\n      args.push(quote(msg).replace(/\\\\n/g, '\\n'));\n      if (options.title) args.push(quote(options.title));\n      break;\n    case 'Darwin-NotificationCenter':\n      args.push(cmd.msg);\n      var stringifiedMsg = quote(msg);\n      var escapedMsg = stringifiedMsg.replace(/\\\\n/g, '\\n');\n      args.push(escapedMsg);\n      if (options.title) {\n        args.push(cmd.title);\n        args.push(quote(options.title));\n      }\n      if (options.subtitle) {\n        args.push(cmd.subtitle);\n        args.push(quote(options.subtitle));\n      }\n      if (options.url) {\n        args.push(cmd.url);\n        args.push(quote(options.url));\n      }\n      break;\n    case 'Linux-Growl':\n      args.push(cmd.msg);\n      args.push(quote(msg).replace(/\\\\n/g, '\\n'));\n      if (options.title) args.push(quote(options.title));\n      if (cmd.host) {\n        args.push(cmd.host.cmd, cmd.host.hostname)\n      }\n      break;\n    case 'Linux':\n      if (options.title) {\n        args.push(quote(options.title));\n        args.push(cmd.msg);\n        args.push(quote(msg).replace(/\\\\n/g, '\\n'));\n      } else {\n        args.push(quote(msg).replace(/\\\\n/g, '\\n'));\n      }\n      break;\n    case 'Windows':\n      args.push(quote(msg).replace(/\\\\n/g, '\\n'));\n      if (options.title) args.push(cmd.title + quote(options.title));\n      if (options.url) args.push(cmd.url + quote(options.url));\n      break;\n    case 'Custom':\n      args[0] = (function(origCommand) {\n        var message = options.title\n          ? options.title + ': ' + msg\n          : msg;\n        var command = origCommand.replace(/(^|[^%])%s/g, '$1' + quote(message));\n        if (command === origCommand) args.push(quote(message));\n        return command;\n      })(args[0]);\n      break;\n  }\n\n  // execute\n  exec(args.join(' '), fn);\n};\n"]}